name: scoreboard
on:
  schedule:
    - cron: '0 */6 * * *'
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  check-mlb-updates:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    outputs:
      should-run: ${{ steps.check-updates.outputs.should-run }}
      mlb_commit: ${{ steps.check-updates.outputs.mlb_commit }}
    steps:
      - name: Check for updates in mlb-led-scoreboard
        id: check-updates
        run: |
          LATEST_COMMIT=$(curl -s \
          https://api.github.com/repos/MLB-LED-Scoreboard/mlb-led-scoreboard/commits/master \
          | jq -r '.sha')
          echo "Latest commit SHA: $LATEST_COMMIT"
          echo "mlb_commit=$LATEST_COMMIT" >> $GITHUB_OUTPUT
          
          # Check if build is needed
          if [ ! -f "last_known_commit.txt" ] || [ "$LATEST_COMMIT" != "$(cat last_known_commit.txt)" ]; then
            echo "$LATEST_COMMIT" > last_known_commit.txt
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-docker-images:
    needs: check-mlb-updates
    if: github.event_name != 'schedule' || needs.check-mlb-updates.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            network=host
      
      # Enhanced caching setup
      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=sha,prefix=,suffix=,format=short
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
          build-args: |
            BUILDKIT_INLINE_CACHE=1
            MLB_COMMIT_HASH=${{ needs.check-mlb-updates.outputs.mlb_commit }}
      
      # Move cache
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
