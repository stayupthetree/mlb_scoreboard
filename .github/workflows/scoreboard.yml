name: scoreboard

on:
  schedule:
    - cron: '0 */6 * * *'  # Run every 6 hours to check for updates from mlb-led-scoreboard
  push:
    branches:
      - main  # Trigger on push to main branch
    tags:
      - 'v*'  # Trigger on tag push, assuming tags are versioned like v1.0, v2.0, etc.
  workflow_dispatch:

jobs:
  check-mlb-updates:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    outputs:
      should-run: ${{ steps.check-updates.outputs.should-run }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Check for updates in mlb-led-scoreboard
        id: check-updates
        run: |
          # Fetch the latest commit SHA from mlb-led-scoreboard's master branch
          LATEST_COMMIT=$(curl -s \
          https://api.github.com/repos/MLB-LED-Scoreboard/mlb-led-scoreboard/commits/master \
          | jq -r '.sha')
          echo "Latest commit SHA: $LATEST_COMMIT"
          touch last_known_commit.txt  # Ensure the file exists
          LAST_COMMIT=$(cat last_known_commit.txt || echo "")
          
          if [ "$LATEST_COMMIT" != "$LAST_COMMIT" ]; then
            echo "$LATEST_COMMIT" > last_known_commit.txt
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            echo "should-run=false" >> $GITHUB_OUTPUT
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OUTPUT: ${{ github.output }}

  build-docker-images:
    needs: check-mlb-updates
    if: github.event_name != 'schedule' || needs.check-mlb-updates.outputs.should-run == 'true'
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
      PLATFORMS: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/arm/v8
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          save-always: true
      
      - name: Log into GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=semver,pattern={{version}}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.PLATFORMS }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
